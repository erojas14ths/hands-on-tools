openapi: 3.0.3
info:
  title: MS Person
  description: MS Person
  version: 1.0.0
servers:
  - url: "http://localhost:7002"
tags:
  - name: Person
    description: API Person
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          description: "Person ID"
          example: 1
        firstname:
          type: string
          description: "First name"
          example: "Ana Paula"
        lastname:
          type: string
          description: "Last name"
          example: "Navarrete"
        email:
          type: string
          description: "Email"
          example: "quintana.ximena@yahoo.com"
        phone:
          type: string
          description: "Phone"
          example: "+7164406803083"
        birthday:
          type: string
          description: "Birthday"
          example: "2017-04-01"
        gender:
          type: string
          description: "Gender"
          example: "female"
        website:
          type: string
          description: "Website"
          example: "http://quinonez.com"
        image:
          type: string
          description: "Image"
          example: "http://placeimg.com/640/480/people"
    HttpError:
      type: object
      properties:
        timestamp:
          type: string
          description: "Timestamp"
          example: "2023-04-18T13:09:52.401739800"
        serial:
          type: string
          description: "Serial"
          example: "2.0.1"
        message:
          type: string
          description: "Message"
          example: "User id not found"
        detail:
          type: string
          description: "Detail"
          example: "I/O error on GET request for \"http://localhost:7002/person/findOne/1\": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect"
paths:
  /person/findAll:
    get:
      tags:
        - Person
      description: "Find all persons"
      operationId: "findAll"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpError"
  /person/findOne/{id}:
    get:
      tags:
        - Person
      description: "Find one person"
      operationId: "findOne"
      parameters:
        - name: id
          in: path
          required: true
          description: "ID Person"
          example: 1
          schema:
            type: integer
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpError"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpError"
  /person/save:
    post:
      tags:
        - Person
      description: "Save person"
      operationId: "save"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpError"
  /person/saveAll:
    post:
      tags:
        - Person
      description: "Save all persons"
      operationId: "saveAll"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Person"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpError"
  /person/deleteOne/{id}:
    delete:
      tags:
        - Person
      description: "Delete one person"
      operationId: "deleteOne"
      parameters:
        - name: id
          in: path
          required: true
          description: "ID Person"
          example: 1
          schema:
            type: integer
      responses:
        200:
          description: "OK"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpError"

